library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
xyplot()
library(lattice)
xyplot()
bwplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
BodyWeight
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom_abline
temp  <- melt(data[,c[1,3]], id = "interval", measure.vars = "steps", na.rm = TRUE)
library("reshape2")
temp  <- melt(data[,c[1,3]], id = "interval", measure.vars = "steps", na.rm = TRUE)
temp  <- melt(data[,c(1,3)], id = "interval", measure.vars = "steps", na.rm = TRUE)
data = read.csv("activity.csv")
dateofData = as.Date(data[,2], format ="%Y-%m-%d")
monthdayofData  <- format(dateofData, "%m-%d")
dayofData  <- weekdays(dateofData, abbreviate = TRUE)
data[,c(2,4,5)]  <-  cbind(as.character(dateofData), monthdayofData, dayofData)
names(data)[4]  <- cbind("month.day")
names(data)[5]  <- "weekday"
head(data)
library("reshape2")
temp  <- melt(data[,c(1,3)], id = "interval", measure.vars = "steps", na.rm = TRUE)
data = read.csv("activity.csv")
setwd("~/Documents/Study/Coursera/Reproducible research/RepData_PeerAssessment1")
data = read.csv("activity.csv")
dateofData = as.Date(data[,2], format ="%Y-%m-%d")
monthdayofData  <- format(dateofData, "%m-%d")
dayofData  <- weekdays(dateofData, abbreviate = TRUE)
data[,c(2,4,5)]  <-  cbind(as.character(dateofData), monthdayofData, dayofData)
names(data)[4]  <- cbind("month.day")
names(data)[5]  <- "weekday"
head(data)
library("reshape2")
temp  <- melt(data[,c(1,3)], id = "interval", measure.vars = "steps", na.rm = TRUE)
View(temp)
temp  <- melt(data[,c(1,3)], id = "steps", measure.vars = "interval", na.rm = TRUE)
View(temp)
stepsOverInterval  <- dcast(temp, steps~variable, mean)
View(stepsOverInterval)
temp  <- melt(data[,c(1,4)], id = "month.day", measure.vars = "steps", na.rm = TRUE)
View(temp)
temp  <- melt(data[,c(1,3)], id = "interval", measure.vars = "steps", na.rm = TRUE)
stepsOverInterval  <- dcast(temp, interval~variable, mean)
View(stepsOverInterval)
plot(stepsOverInterval)
plot(stepsOverInterval, type = "l")
?ts
stepsOverInterval  <- dcast(temp, interval~variable, mean)
View(stepsOverInterval)
?plot
max(stepsOverInterval[,2])
?max
summary(stepsOverInterval)
?find
which.max(stepsOverInterval[,2])
intervalMaxSteps  <- stepsOverInterval[which.max(stepsOverInterval[,2]),1]
which.max(stepsOverInterval[,2])
intervalMaxSteps  <- as.integer(stepsOverInterval[which.max(stepsOverInterval[,2]),1])
intervalMaxSteps  <- as.integer(stepsOverInterval[which.max(stepsOverInterval[,2]),1])
intervalMaxSteps
as.character(intervalMaxSteps)
tt  <- as.character(intervalMaxSteps)
835/60
?time
?as.POSIXlt
as.POSIXlt(stepsOverInterval[,1], "%H:%m")
as.POSIXlt(stepsOverInterval[,1], "%H:%m", origin = 0)
as.POSIXlt(stepsOverInterval[,1], "%H:%m", origin = "0")
as.POSIXlt(stepsOverInterval[,1], "%H:%M", origin = "0")
sprintf("%04d", stepsOverInterval[,1])
?strptime
strptime(sprintf("%04d", stepsOverInterval[,1]), "%H:%M")
strptime(sprintf("%04d", stepsOverInterval[,1]), "%H:%m")
strptime(sprintf("%04d", stepsOverInterval[,1]), "%H%M")
View(data)
data = read.csv("activity.csv")
View(data)
intervals  <- strptime(sprintf("%04d", data[,3]), "%H%M")
interval  <- format(intervals, format ="%H:%M")
data = read.csv("activity.csv")
intervals  <- strptime(sprintf("%04d", data[,3]), "%H%M")
interval  <- format(intervals, format ="%H:%M")
dateofData = as.Date(data[,2], format ="%Y-%m-%d")
monthdayofData  <- format(dateofData, "%m-%d")
dayofData  <- weekdays(dateofData, abbreviate = TRUE)
data[,c(2:5)]  <-  cbind(as.character(dateofData), interval,monthdayofData, dayofData)
names(data)[4]  <- cbind("month.day")
names(data)[5]  <- "weekday"
head(data)
View(data)
library("reshape2")
temp  <- melt(data[,c(1,3)], id = "interval", measure.vars = "steps", na.rm = TRUE)
stepsOverInterval  <- dcast(temp, interval~variable, mean)
plot(stepsOverInterval, type = "l", lwd = 2, col = "red",xlab = "5 min intervals", ylab ="Average number of steps", main = "Average no of steps over 5 min interval")
View(stepsOverInterval)
intervalMaxSteps  <- as.integer(stepsOverInterval[which.max(stepsOverInterval[,2]),1])
View(stepsOverInterval)
intervalMaxSteps  <- stepsOverInterval[which.max(stepsOverInterval[,2]),1]
c  <- ggplot(stepsOverInterval, aes(x = interval, y = steps))
library("ggplot2")
c  <- ggplot(stepsOverInterval, aes(x = interval, y = steps))
c+ geom_line()
c  <- ggplot(stepsOverInterval, aes(x = interval, y = steps))+geom_line()
c  <- ggplot(stepsOverInterval, aes(x = interval, y = steps)) + geom_line()
library("reshape2")
temp  <- melt(data[,c(1,3)], id = "interval", measure.vars = "steps", na.rm = TRUE)
stepsOverInterval  <- dcast(temp, interval~variable, mean)
c  <- ggplot(stepsOverInterval, aes(x = interval, y = steps)) + geom_line()
ggplot(stepsOverInterval, aes(x = interval, y = steps)) + geom_line()
ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red")) + geom_line()
plot(stepsOverInterval)
qplot(stepsOverInterval)
?plot
plot(stepsOverInterval[,1], stepsOverInterval[,2])
plot.ts(stepsOverInterval)
plot.ts(stepsOverInterval[,2])
plot(stepsOverInterval)
ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red")) + geom_point()
ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red")) + geom_point()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(stepsOverInterval)
ggplot2(stepsOverInterval)
plot(data.frame(stepsOverInterval))
?qplot
qplot(interval, steps, data = stepsOverInterval)
qplot(interval, steps, data = stepsOverInterval, type ="l")
?qplot
qplot(interval, steps, data = stepsOverInterval, grom = "path")
?qplot
qplot(interval, steps, data = stepsOverInterval, grom = "line")
qplot(interval, steps, data = stepsOverInterval, geom = "line")
qplot(interval, steps, data = stepsOverInterval, geom = "path")
qplot(data = stepsOverInterval,interval, steps,  geom = "line")
qplot(data = stepsOverInterval,x = interval,y = steps,  geom = "line")
ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red")) + geom_point(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red")) + geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 1))
c <- ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red"))
# Plot average number of steps for each interval
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 0.5)+ labs = "Average number of steps over each 5 min interval")
c <- ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red"))
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 0.5)+ labs = "Average number of steps over each 5 min interval")
c <- ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red"))
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 0.5))+ labs(title = "Average number of steps over each 5 min interval")+scale_colour_manual(values=c("red"),labels=c("Baltimore"))
c <- ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red"))
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 0.5))+ labs(title = "Average number of steps over each 5 min interval")+scale_colour_manual(values=c("red"),labels=c("Average_Activity"))+labs(colour = "City")
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 1.5))+ labs(title = "Average number of steps over each 5 min interval")+scale_colour_manual(values=c("red"),labels=c("Average_Activity"))+labs(colour = "steps")
View(data)
length(data[,1]==NA)
is.na(data[,1])
length(is.na(data[,1]))
length(is.na(data[,1])==TRUE)
sum(is.na(data[,1]))
sum(is.na(data[,2]))
sum(is.na(data[,3]))
sum(is.na(data[,4]))
sum(is.na(data[,5]))
sum(is.na(data))
length(data)
length(data,2)
?length
dim(data)
dim(data,1)
?dim
dim(data)[1]
data$interval(1,1)
data$interval[1,1]
data$interval[4]
?fill
?na.action
?substitute
numNA  <- sum(is.na(data[,1]))
for(i in 1:dim(data)[1])
{
if (is.na(data))
{
actInterval  <-  data$interval[i]
intervalMean  <- stepsOverInterval[stepsOverInterval$interval == actInterval,1]
data$steps[i]  <- intervalMean
}
}
```
### Observations
View(data)
numNA  <- sum(is.na(data[,1]))
for(i in 1:dim(data)[1])
{
if (is.na(data$steps[i]))
{
actInterval  <-  data$interval[i]
intervalMean  <- stepsOverInterval[stepsOverInterval$interval == actInterval,1]
data$steps[i]  <- intervalMean
}
}
View(data)
View(stepsOverInterval)
numNA  <- sum(is.na(data[,1]))
for(i in 1:dim(data)[1])
{
if (is.na(data$steps[i]))
{
actInterval  <-  data$interval[i]
intervalMean  <- stepsOverInterval[stepsOverInterval$interval == actInterval,2]
data$steps[i]  <- intervalMean
}
}
View(data)
View(data)
data$interval[i]
actInterval
stepsOverInterval$interval == actInterval
stepsOverInterval[stepsOverInterval$interval == actInterval,2]
stepsOverInterval[stepsOverInterval$interval == actInterval,2]
data = read.csv("activity.csv")
intervals  <- strptime(sprintf("%04d", data[,3]), "%H%M")
interval  <- format(intervals, format ="%H:%M")
dateofData = as.Date(data[,2], format ="%Y-%m-%d")
monthdayofData  <- format(dateofData, "%m-%d")
dayofData  <- weekdays(dateofData, abbreviate = TRUE)
data[,c(2:5)]  <-  cbind(as.character(dateofData), interval,monthdayofData, dayofData)
names(data)[4]  <- cbind("month.day")
names(data)[5]  <- "weekday"
head(data)
library("reshape2")
library("ggplot2")
temp  <- melt(data[,c(1,4)], id = "month.day", measure.vars = "steps", na.rm = TRUE)
totalStepsDay  <- dcast(temp, month.day~variable, sum)
meanStepsDay  <- dcast(temp, month.day~variable, mean)
medianStepsDay  <-na.omit(sapply(split(data$steps,data$month.day), median, na.rm = TRUE))
# Plot total number of steps in a particular day of a month
c  <- ggplot(totalStepsDay, aes(x =month.day, y = steps))
c + geom_bar(stat ="identity", fill = "red")+theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = "Total steps per day")
# print median and mean steps per day
cbind(meanStepsDay, medianStepsDay)
library("reshape2")
temp  <- melt(data[,c(1,3)], id = "interval", measure.var = "steps", na.rm = TRUE)
stepsOverInterval  <- dcast(temp, interval~variable, mean)
# Plot average number of steps for each interval
c <- ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red"))
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 1.5))+ labs(title = "Average number of steps over each 5 min interval")+scale_colour_manual(values=c("red"),labels=c("Average_Activity"))+labs(colour = "steps")
intervalMaxSteps  <- stepsOverInterval[which.max(stepsOverInterval[,2]),1]
numNA  <- sum(is.na(data[,1]))
for(i in 1:dim(data)[1])
{
if (is.na(data$steps[i]))
{
actInterval  <-  data$interval[i]
intervalMean  <- stepsOverInterval[stepsOverInterval$interval == actInterval,2]
data$steps[i]  <- intervalMean
}
}
View(data)
nData  <- data.frame(data)
View(nData)
data = read.csv("activity.csv")
View(data)
nData  <- load("activity.csv")
nData  <- read.csv("activity.csv")
nData[,1]  <- data$steps
View(nData)
View(nData)
nData[,1]  <- data$steps
View(nData)
nData  <- read.csv("activity.csv")
View(nData)
nData$steps  <- data$steps
View(nData)
View(nData)
View(nData)
View(data)
data = read.csv("activity.csv")
intervals  <- strptime(sprintf("%04d", data[,3]), "%H%M")
interval  <- format(intervals, format ="%H:%M")
dateofData = as.Date(data[,2], format ="%Y-%m-%d")
monthdayofData  <- format(dateofData, "%m-%d")
dayofData  <- weekdays(dateofData, abbreviate = TRUE)
data[,c(2:5)]  <-  cbind(as.character(dateofData), interval,monthdayofData, dayofData)
names(data)[4]  <- cbind("month.day")
names(data)[5]  <- "weekday"
head(data)
library("reshape2")
library("ggplot2")
temp  <- melt(data[,c(1,4)], id = "month.day", measure.vars = "steps", na.rm = TRUE)
totalStepsDay  <- dcast(temp, month.day~variable, sum)
meanStepsDay  <- dcast(temp, month.day~variable, mean)
medianStepsDay  <-na.omit(sapply(split(data$steps,data$month.day), median, na.rm = TRUE))
# Plot total number of steps in a particular day of a month
c  <- ggplot(totalStepsDay, aes(x =month.day, y = steps))
c + geom_bar(stat ="identity", fill = "red")+theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = "Total steps per day")
# print median and mean steps per day
cbind(meanStepsDay, medianStepsDay)
library("reshape2")
temp  <- melt(data[,c(1,3)], id = "interval", measure.var = "steps", na.rm = TRUE)
stepsOverInterval  <- dcast(temp, interval~variable, mean)
# Plot average number of steps for each interval
c <- ggplot(stepsOverInterval, aes(x = interval, y = steps, col = "red"))
c+ geom_line(aes(group = 1))+theme(axis.text.x = element_text(angle = 90, hjust = 1.5))+ labs(title = "Average number of steps over each 5 min interval")+scale_colour_manual(values=c("red"),labels=c("Average_Activity"))+labs(colour = "steps")
intervalMaxSteps  <- stepsOverInterval[which.max(stepsOverInterval[,2]),1]
numNA  <- sum(is.na(data[,1]))
# replace missing values by mean
for(i in 1:dim(data)[1])
{
if (is.na(data$steps[i]))
{
actInterval  <-  data$interval[i]
intervalMean  <- stepsOverInterval[stepsOverInterval$interval == actInterval,2]
data$steps[i]  <- intervalMean
}
}
nData  <- read.csv("activity.csv")
nData$steps  <- data$steps
View(nData)
View(data)
numNA  <- sum(is.na(data[,1]))
# replace missing values by mean
for(i in 1:dim(data)[1])
{
if (is.na(data$steps[i]))
{
actInterval  <-  data$interval[i]
intervalMean  <- stepsOverInterval[stepsOverInterval$interval == actInterval,2]
data$steps[i]  <- intervalMean
}
}
nData  <- read.csv("activity.csv")
nData$steps  <- data$steps
head(nData)
# Histogram of total numver of steps each day
temp  <- melt(data[,c(1,4)], id = "month.day", measure.vars = "steps")
totalStepsDay  <- dcast(temp, month.day~variable, sum)
meanStepsDay  <- dcast(temp, month.day~variable, mean)
medianStepsDay  <-na.omit(sapply(split(data$steps,data$month.day), median))
# Plot total number of steps in a particular day of a month
c  <- ggplot(totalStepsDay, aes(x =month.day, y = steps))
c + geom_bar(stat ="identity", fill = "red")+theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = "Total steps per day")
View(meanStepsDay)
install.packages("xtable")
View(data)
?weekdays
myframe$wend <- as.factor(ifelse(weekday( data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
myframe$wend <- as.factor(ifelse(weekdays( data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
myframe$wend <- as.factor(ifelse(weekdays( data$date) %in% c("Sat","Sun"), "Weekend", "Weekday"))
View(data)
myframe$wend <- as.factor(ifelse(weekdays(as.character(data$date)) %in% c("Sat","Sun"), "Weekend", "Weekday"))
myframe$wend <- as.factor(ifelse(weekdays(as.Date(data$date)) %in% c("Sat","Sun"), "Weekend", "Weekday"))
wend <- as.factor(ifelse(weekdays(as.Date(data$date)) %in% c("Sat","Sun"), "Weekend", "Weekday"))
wend
data$wend<- as.factor(ifelse(weekdays(as.Date(data$date)) %in% c("Sat","Sun"), "Weekend", "Weekday"))
View(data)
data$wend[1500:2000]
data$wend[2000:2500]
sum(data$wend = "Weekend")
sum(data$wend == "Weekend")
sum(data$weekday == "Sat")
data$wend<- as.factor(ifelse(data$weekday) %in% c("Sat","Sun"), "Weekend", "Weekday"))
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
sum(data$wend == "Weekend")
View(data)
temp  <- melt(data[,c(1,6)], measure.vars = c("steps", "interval"), id = "wend")
View(data)
temp  <- melt(data[,c(1,6)], measure.var = c("steps", "interval"), id = "wend")
temp  <- melt(data[,c(1,6)], measure.var ="steps", id = c("wend", "interval"))
View(data)
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
View(temp)
weekSteps  <- dcast(temp, wend~variable, mean)
View(weekSteps)
weekSteps  <- dcast(temp, wend+interval~variable, mean)
View(weekSteps)
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = fips))
g+geom_line(aes(group = wend)) +labs(title = "Emission due to motor vehicles vs year")+
scale_colour_manual(values=c("blue", "red"),labels=c("Baltimore", "Los Angeles")) +labs(colour = "City")
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = wend))
g+geom_line(aes(group = wend)) +labs(title = "Emission due to motor vehicles vs year")+
scale_colour_manual(values=c("blue", "red"),labels=c("Baltimore", "Los Angeles")) +labs(colour = "City")
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = wend))
g+geom_line(aes(group = wend)) +labs(title = "Emission due to motor vehicles vs year")+
scale_colour_manual(values=c("blue", "red"),labels=c("Weekday", "Weekend")) +labs(colour = "Day")
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = wend))
g+geom_line(aes(group = wend)) +labs(title = "Emission due to motor vehicles vs year")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+scale_colour_manual(values=c("blue", "red"),labels=c("Weekday", "Weekend")) +labs(colour = "Day")
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = wend))
g+geom_line(aes(group = wend)) +labs(title = "Average steps during weekend and weekday")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+facet_grid(.~wend)
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = wend))
g+geom_line(aes(group = wend)) +labs(title = "Average steps during weekend and weekday")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+facet_grid(wend~.)
data$wend<- as.factor(ifelse(data$weekday %in% c("Sat","Sun"), "Weekend", "Weekday"))
temp  <- melt(data[,c(1,3,6)], measure.var ="steps", id = c("wend", "interval"))
weekSteps  <- dcast(temp, wend+interval~variable, mean)
g  <- ggplot(weekSteps, aes(interval, steps, color = wend))
g+geom_line(aes(group = wend)) +labs(title = "Average steps during weekend and weekday", ylab ="number of steps")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+facet_grid(wend~.)
library(knitr)
knit2html("PA1_template.Rmd")
